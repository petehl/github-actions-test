name: Push
on: 
  push:
jobs:
  tagify_git_branch:
    runs-on: ubuntu-latest
    name: Make git branch more docker tag friendly
    outputs:
      git_branch_tag: ${{steps.tagify_git_branch.outputs.docker-branch-tag}}
    steps:
      - uses: actions/checkout@v2
      - name: Convert slashes to hyphens for gitbranch to conform with docker tags
        id: tagify_git_branch
        run: |
          export GIT_BRANCH_IMAGE_TAG=git-branch-$(git branch --show-current | sed 's/\//-/g')
          echo "::set-output name=docker-branch-tag::${GIT_BRANCH_IMAGE_TAG}"
  
  app: 
    runs-on: ubuntu-latest
    defaults:
      run: 
        shell: bash
        working-directory: terraform
    env:
      GITHUB_ACTION_S3_BUCKET: sd.github-actions-artifact
      TERRAFORM_S3_BUCKET_KEY: terraform/${{github.repository}}/${{github.event_name}}/${{github.event.number}}
      TERRAFORM_ENVIRONMENT: ${{github.event_name}}_${{github.event.number}}"
    steps: 
      - uses: actions/checkout@v2
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Bash test
        run: docker version
      - name: Git Short
        run: |
          git rev-parse HEAD
          git rev-parse --short HEAD
          git log -10
          echo "hash = $(git rev-parse --short HEAD)"
          echo "::set-output name=sha7::$(git rev-parse --short HEAD)"
          jq .test ../test.json
  
  build-app:
    name: Docker- build / publish
    runs-on: ubuntu-latest
    needs: tagify_git_branch
    outputs: 
      published_image: ${{ steps.push-docker-to-hub.outputs.docker-image }}
    env:
      DOCKERHUB: yes
    steps:
      - uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: --debug
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{github.ref}}-${{ github.sha }}
      - name: Build / Push Docker Image
        id: push-docker-to-hub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            plaht/docker-cache-test:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  integration-tests:
    runs-on: ubuntu-latest
    needs: [build-app]
    steps:
      - uses: actions/checkout@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{github.ref}}-${{ github.sha }}
      - name: Pull / Run the stack
        run: |
          docker-compose up -d --no-build
        env:
          NODE_ENV: production