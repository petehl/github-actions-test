name: Pull Request
on: 
  pull_request:
    types: [opened, synchronize, reopened, closed]
jobs: 
  app: 
    runs-on: ubuntu-latest
    defaults:
      run: 
        shell: bash
        working-directory: terraform
    steps: 
      - uses: actions/checkout@v2
      - name: Print references
        run: |
          echo ${{ github.ref }} 
          echo ${{ github.base_ref }} 
          echo ${{ github.head_ref }}
          echo ${{ github.action }}
          echo ${{ github.event_name }}
          echo ${{ github.actor }}
          echo ${{ github.run_id }}
          echo ${{ github.run_number }}
          echo ${{ github.job }}
          echo ${{ github.event.type }}
          echo ${{ github.event_path }}
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Restore terraform folder from cache
        uses: actions/cache@v2
        with:
          path: .terraform/
          key: ${{ runner.os }}-terraform-cache-${{github.event_name}}_${{github.event.number}}
          restore-keys: |
            ${{ runner.os }}-terraform-cache-${{github.event_name}}
            ${{ runner.os }}-terraform-cache-
            ${{ runner.os }}-
      - name: Restore terraform state from cache
        uses: actions/cache@v2
        with:
          path: terraform.tfstate
          key: ${{ runner.os }}-terraform-cache-${{github.event_name}}_${{github.event.number}}
          restore-keys: |
            ${{ runner.os }}-terraform-cache-${{github.event_name}}
            ${{ runner.os }}-terraform-cache-
            ${{ runner.os }}-
      - name: Restore terraform state from cache
        uses: actions/cache@v2
        with:
          path: terraform.tfstate.backup
          key: ${{ runner.os }}-terraform-cache-${{github.event_name}}_${{github.event.number}}
          restore-keys: |
            ${{ runner.os }}-terraform-cache-${{github.event_name}}
            ${{ runner.os }}-terraform-cache-
            ${{ runner.os }}-
      - name: Echo test
        run: cat terraform.tfstate
      - name: Terraform Init
        # if: github.event_name == 'pull_request' && github.event.action == 'open'
        run: terraform init
      - name: Terraform Format
        run: terraform fmt -check
      - name: Terraform Plan
        run: terraform plan -var "environment=${{github.event_name}}_${{github.event.number}}" -var "aws_access_key=${{secrets.AWS_ACCESS_KEY}}" -var "aws_secret_key=${{secrets.AWS_SECRET_KEY}}" -out=plan.tfplan
      - name: Terraform Apply
        run: terraform apply  -auto-approve "plan.tfplan"
